# ==========================                                                                                                                                                                             
# ====== Generales ========= 
# ==========================   


# remap prefix to Control + a
unbind C-b
set -g prefix C-a

set -g default-terminal "screen-256color"

# Keep window names as I set them
setw -g automatic-rename off


# ========================
# ====== Key Bindings ====
# ========================

unbind ,    #rename-window




# default window title colors
set-window-option -g window-status-fg colour244  # base0
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166  # orange
set-window-option -g window-status-current-bg default

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# new window and retain cwd
#bind C new-window -c "#{pane_current_path}" \; command-prompt -p "Name for this new window: " "rename-window '%%'"
bind c new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created:
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'


# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"


# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Start numbering at 1
set -g base-index 1

# Renumber windows after removing one
set -g renumber-windows on

# change tmux bar colors
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'


# Keep plenty of history for scrollback
set -g history-limit 50000


#Clock 24 h format
set -g clock-mode-style 24

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# More intuitive keybindings for splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
# # Note, bindings are repeatable (within the default 500ms time limit) so that
# # you don't have to keep entering the prefix. (Prefix-H-H-H resizes by 15)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
unbind -n C-Left
unbind -n C-Down
unbind -n C-Up
unbind -n C-Right
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5


# Make C-j display a selectable list of sessions
bind C-j choose-tree


# Easy return to Vim from tmux runner zoom runner pane
bind C-p run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys ':VtrZoomRunnerPane' 'C-m') || tmux send-keys 'C-c' && tmux select-pane -l"

# Zoom pane
bind + resize-pane -Z


# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'



# ===============================
# ====         Theme         ====
# ===============================
# Check if this changes the configuration for the
# that has been set above. 
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


# ===================================
# ==== Appearence and status bar ====
# ===================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_date="#[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=blue]%d-%b-%y"
#wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
#set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{gpu_fg_color}GPU:#{gpu_percentage} | #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date #{online_status}"
#set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed GPU:#{gpu_bg_color}#{gpu_percentage} | #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date #{online_status}"

set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed GPU:#{gpu_percentage} | #{sysstat_mem} | CPU:#{cpu_percentage} | #{sysstat_loadavg} | $wg_user_host | $wg_date #{online_status}"

# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$color_level_ok]°#[default]"
set -g @offline_icon "#[fg=$color_level_stress]°#[default]"

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'


# Configure colors for tmux-cpu CPU and GPU widget
#set -g @cpu_low_icon "ℵ°"
#set -g @cpu_medium_icon "ℵ"
#set -g @cpu_high_icon "ℵ2"
#set -g @gpu_low_icon "ℵ0"
#set -g @gpu_medium_icon "ℵ1"
#set -g @gpu_high_icon "ℵ2"

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
#set -g @sysstat_cpu_color_low "$color_level_ok"
#set -g @sysstat_cpu_color_medium "$color_level_warn"
#set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

#set -g @sysstat_swap_color_low "$color_level_ok"
#set -g @sysstat_swap_color_medium "$color_level_warn"
#set -g @sysstat_swap_color_stress "$color_level_stress"


# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"


#set-option -g status on
#set-option -g status-interval 1
#set-option -g status-justify centre
#set-option -g status-keys vi
#set-option -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -\
c 1-6)#[default]"
#set-option -g status-left-length 20
#set-option -g status-left-style default
#set-option -g status-position bottom
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a-%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
#set-option -g status-right-length 140
#set-option -g status-right-style default
#set-option -g status-style fg=colour136,bg=colour235


# ======================
# ====   Plugins    ====
# ======================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

# Not sure how to use this:
set -g @open-S 'https://www.google.com/search?q='


run '~/.tmux/plugins/tpm/tpm'






